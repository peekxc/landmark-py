name: Build Windows package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_windows:      
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    env:
      PKG_NAME: skpackage
      CC: clang-cl
      CXX: clang-cl
      LDFLAGS: "-Wl,-S"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest"]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
    - name: Checkout 
      uses: actions/checkout@v3
      with: 
        submodules: true
    ## This installs clang, clang-cl, and related linker things
    - name: Install Clang with OpenMP support via Chocolatey
      run: |
        choco install -y llvm --params "clang;compiler=clang" --version 17.0.0
        $env:PATH = "C:\Program Files\LLVM\bin;$env:PATH"
        clang --version
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build pytest pytest-cov pytest-benchmark
    # - name: Install package
    #   run: |
    #     python -m pip install --verbose .
    # - name: Test with pytest
    #   run: |
    #     python -m pytest tests/ --cov=skpackage --benchmark-skip
    #     coverage report -m
    # - name: Uninstall the package
    #   run: |
    #     python -m pip uninstall --verbose -y skpackage
    - name: Build the wheel wheel
      run: |
        python -m build
    - name: Save the wheel
      run: | 
        echo $env:GITHUB_WORKSPACE
        dir dist
        $env:wheel_name=Get-ChildItem -Path dist/* -Include *.whl
    - name: Powershell command
      run: |
        Get-ChildItem -Path dist/* -Include *.whl
    - name: Try running bash since windows is horrendous
      run: |
        echo "WHEEL_NAME=$(ls dist/*.whl | head -1)" >> $GITHUB_ENV
      shell: bash 
    - name: Echo wheel
      run: | 
        echo $env:wheel_name
    - name: Echo wheel 2
      run: |
        echo $WHEEL_NAME
    - name: Install the wheel 
      run: |
        python -m pip install --verbose ${{ env.WHEEL_NAME }}
    - name: Wheel dry-run 
      run: | 
        chdir ..
        python -c "import skpackage; print(skpackage.__version__)"
    - name: Test the wheel 
      run: |
        python -m pytest tests/ --cov=skpackage --benchmark-skip
        coverage report -m

# python -m pip install --verbose dist\*.whl
# python -m pip wheel . --no-deps --verbose --wheel-dir dist 