Build started at 2024-03-27T13:17:54.386859
Main binary: /Users/mpiekenbrock/opt/miniconda3/envs/spri/bin/python
Build Options: -Dbuildtype=release -Db_ndebug=if-release -Db_vscrt=md -Ddefault_library=static --native-file=/Users/mpiekenbrock/landmark-py/.mesonpy-m1t2o5ic/meson-python-native-file.ini
Python system: Darwin
The Meson build system
Version: 1.4.0
Source dir: /Users/mpiekenbrock/landmark-py
Build dir: /Users/mpiekenbrock/landmark-py/.mesonpy-m1t2o5ic
Build type: native build
Running command: /Users/mpiekenbrock/opt/miniconda3/envs/spri/bin/python /Users/mpiekenbrock/landmark-py/src/landmark/__version__.py
--- stdout ---
0.0.1

--- stderr ---


Project name: landmark
Project version: 0.0.1
-----------
Detecting compiler via: `/usr/local/opt/llvm/bin/clang++ --version` -> 0
stdout:
Homebrew clang version 15.0.7
Target: x86_64-apple-darwin19.6.0
Thread model: posix
InstalledDir: /usr/local/opt/llvm/bin
-----------
Running command: /usr/local/opt/llvm/bin/clang++ -E -dM -
-----
-----------
Detecting linker via: `/usr/local/opt/llvm/bin/clang++ -Wl,--version -L/usr/local/opt/llvm/lib -I/usr/local/opt/llvm/include` -> 1
stderr:
ld: unknown option: --version
clang-15: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
-----------
Detecting Apple linker via: `/usr/local/opt/llvm/bin/clang++ -Wl,-v -L/usr/local/opt/llvm/lib -I/usr/local/opt/llvm/include` -> 1
stderr:
@(#)PROGRAM:ld  PROJECT:ld64-609.8
BUILD 15:07:46 Dec 18 2020
configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
Library search paths:
	/usr/local/opt/llvm/lib
	/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/lib
Framework search paths:
	/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/
Undefined symbols for architecture x86_64:
  "_main", referenced from:
     implicit entry/start for main executable
ld: symbol(s) not found for architecture x86_64
clang-15: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
Sanity testing C++ compiler: /usr/local/opt/llvm/bin/clang++
Is cross compiler: False.
Sanity check compiler command line: /usr/local/opt/llvm/bin/clang++ sanitycheckcpp.cc -o sanitycheckcpp.exe -I/usr/local/opt/llvm/include -L/usr/local/opt/llvm/lib
Sanity check compile stdout:

-----
Sanity check compile stderr:

-----
Running test binary command:  /Users/mpiekenbrock/landmark-py/.mesonpy-m1t2o5ic/meson-private/sanitycheckcpp.exe
C++ compiler for the host machine: /usr/local/opt/llvm/bin/clang++ (clang 15.0.7 "Homebrew clang version 15.0.7")
C++ linker for the host machine: /usr/local/opt/llvm/bin/clang++ ld64 609.8
-----------
Detecting archiver via: `llvm-ar-15 --version` -> [Errno 2] No such file or directory: 'llvm-ar-15'
-----------
Detecting archiver via: `llvm-ar --version` -> [Errno 2] No such file or directory: 'llvm-ar'
-----------
Detecting archiver via: `ar --version` -> 1
stderr:
usage:  ar -d [-TLsv] archive file ...
	ar -m [-TLsv] archive file ...
	ar -m [-abiTLsv] position archive file ...
	ar -p [-TLsv] archive [file ...]
	ar -q [-cTLsv] archive file ...
	ar -r [-cuTLsv] archive file ...
	ar -r [-abciuTLsv] position archive file ...
	ar -t [-TLsv] archive [file ...]
	ar -x [-ouTLsv] archive [file ...]
-----------
-----------
Detecting compiler via: `/usr/local/opt/llvm/bin/clang++ --version` -> 0
stdout:
Homebrew clang version 15.0.7
Target: x86_64-apple-darwin19.6.0
Thread model: posix
InstalledDir: /usr/local/opt/llvm/bin
-----------
Running command: /usr/local/opt/llvm/bin/clang++ -E -dM -
-----
-----------
Detecting linker via: `/usr/local/opt/llvm/bin/clang++ -Wl,--version -L/usr/local/opt/llvm/lib -I/usr/local/opt/llvm/include` -> 1
stderr:
ld: unknown option: --version
clang-15: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
-----------
Detecting Apple linker via: `/usr/local/opt/llvm/bin/clang++ -Wl,-v -L/usr/local/opt/llvm/lib -I/usr/local/opt/llvm/include` -> 1
stderr:
@(#)PROGRAM:ld  PROJECT:ld64-609.8
BUILD 15:07:46 Dec 18 2020
configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
Library search paths:
	/usr/local/opt/llvm/lib
	/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/lib
Framework search paths:
	/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/
Undefined symbols for architecture x86_64:
  "_main", referenced from:
     implicit entry/start for main executable
ld: symbol(s) not found for architecture x86_64
clang-15: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
Sanity testing C++ compiler: /usr/local/opt/llvm/bin/clang++
Is cross compiler: False.
Sanity check compiler command line: /usr/local/opt/llvm/bin/clang++ sanitycheckcpp.cc -o sanitycheckcpp.exe -I/usr/local/opt/llvm/include -L/usr/local/opt/llvm/lib
Sanity check compile stdout:

-----
Sanity check compile stderr:

-----
Running test binary command:  /Users/mpiekenbrock/landmark-py/.mesonpy-m1t2o5ic/meson-private/sanitycheckcpp.exe
C++ compiler for the build machine: /usr/local/opt/llvm/bin/clang++ (clang 15.0.7 "Homebrew clang version 15.0.7")
C++ linker for the build machine: /usr/local/opt/llvm/bin/clang++ ld64 609.8
-----------
Detecting archiver via: `llvm-ar-15 --version` -> [Errno 2] No such file or directory: 'llvm-ar-15'
-----------
Detecting archiver via: `llvm-ar --version` -> [Errno 2] No such file or directory: 'llvm-ar'
-----------
Detecting archiver via: `ar --version` -> 1
stderr:
usage:  ar -d [-TLsv] archive file ...
	ar -m [-TLsv] archive file ...
	ar -m [-abiTLsv] position archive file ...
	ar -p [-TLsv] archive [file ...]
	ar -q [-cTLsv] archive file ...
	ar -r [-cuTLsv] archive file ...
	ar -r [-abciuTLsv] position archive file ...
	ar -t [-TLsv] archive [file ...]
	ar -x [-ouTLsv] archive [file ...]
-----------
Build machine cpu family: x86_64
Build machine cpu: x86_64
Host machine cpu family: x86_64
Host machine cpu: x86_64
Target machine cpu family: x86_64
Target machine cpu: x86_64
